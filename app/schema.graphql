directive @auth on FIELD_DEFINITION | FIELD

#importando los esquemas al esquema principal
# import customers from "./schema/customers.graphql"
# import address from "./schema/address.graphql"
# import products from "./schema/products.graphql"
# import providers from "./schema/providers.graphql"
# import sales from "./schema/sales.graphql"
# import detail from "./schema/salesDetail.graphql"

type Query{
	listCustomers:[Customer]!
	singleCustomer(id:ID!):Customer!

	listAddress:[Address]!  @auth
	singleAddress(id:ID!):Address!

	listProducts:[Product!]
	singleProducts(id:ID!):Product!

	listProviders:[Provider!]
	singleProviders(id:ID!):Provider!

	listSales(status:TYPE_STATUS!):[Sales!] @auth
	singleSales(id:ID!):Sales!

	listSalesDetail:[SalesDetail!]
	singleSalesDetail(id:ID!):SalesDetail!
}

type Mutation{
	login(email:String!,password:String,typeUser:TYPE_USER):Auth!
	createCustomers(data:createCustomerInput!):Customer!
	updateCustomers(id:ID!,data:updateCustomerInput!):Customer! @auth
	deleteCustomers:String! @auth

	createAddress(data:createAddressinput!):Address! @auth
	updateAddress(id:ID!,data:updateAddressinput!):Address! @auth
	deleteAddress:String! @auth

	createProducts(data:createProductsInput!):Product
	updateProducts(id:ID!,data:updateProductsInput!):Product! @auth
	deleteProducts:String! @auth

	createProviders(data:createProvidersInput!):Provider
	updateProviders(id:ID!,data:updateProvidersInput!):Provider! @auth
	deleteProviders:String! @auth

	createSales(data:createSalesInput!):Sales! @auth
	updateSales(id:ID!,data:updateSalesInput!):Sales! @auth
	deleteSales:String! @auth

	createSalesDetail(data:createSalesDetailInput!):SalesDetail! @auth
	updateSalesDetail(id:ID!,data:updateSalesDetailInput!):SalesDetail! @auth
	deleteSalesDetail:String! @auth
}

type Auth{
	token:String!
	message:String!
}

enum TYPE_USER {
	C
	P
}
